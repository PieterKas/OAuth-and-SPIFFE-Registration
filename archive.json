{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2025-07-24T02:00:39.547856+00:00",
  "repo": "PieterKas/OAuth-and-SPIFFE-Registration",
  "labels": [
    {
      "name": "bug",
      "description": "Something isn't working",
      "color": "d73a4a"
    },
    {
      "name": "documentation",
      "description": "Improvements or additions to documentation",
      "color": "0075ca"
    },
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "enhancement",
      "description": "New feature or request",
      "color": "a2eeef"
    },
    {
      "name": "good first issue",
      "description": "Good for newcomers",
      "color": "7057ff"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "008672"
    },
    {
      "name": "invalid",
      "description": "This doesn't seem right",
      "color": "e4e669"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "wontfix",
      "description": "This will not be worked on",
      "color": "ffffff"
    }
  ],
  "issues": [
    {
      "number": 2,
      "id": "I_kwDOOooYGs65HQz0",
      "title": "Clarify terminology",
      "url": "https://github.com/PieterKas/OAuth-and-SPIFFE-Registration/issues/2",
      "state": "CLOSED",
      "author": "PieterKas",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "This is a carry-over from @PieterKas, but this PR would be a good chance to fix this too I will mention it:\r\nIn my opinion we should not use the terminology `client_id` and `client_id`, we should use \"client ID\" and \"client secret\" (capitalized only when referred to specifically The Client ID or The Client Secret).\r\n\r\nThe terms `client_id` and `client_secret` should only be used when we are referring specifically to the parameters, which are snake_cased and usually in code formatting.\r\n\r\n_Originally posted by @dagdagdag83 in https://github.com/PieterKas/OAuth-and-SPIFFE-Registration/issues/1#issuecomment-2915672570_\r\n            ",
      "createdAt": "2025-05-31T16:03:04Z",
      "updatedAt": "2025-06-13T13:15:59Z",
      "closedAt": "2025-06-13T13:15:59Z",
      "comments": [
        {
          "author": "PieterKas",
          "authorAssociation": "OWNER",
          "body": "@dagdagdag83 - would you like to propose a PR for this?",
          "createdAt": "2025-05-31T16:06:35Z",
          "updatedAt": "2025-05-31T16:06:35Z"
        },
        {
          "author": "dagdagdag83",
          "authorAssociation": "COLLABORATOR",
          "body": "@PieterKas yep, I can do it next week \ud83d\udc4d ",
          "createdAt": "2025-05-31T16:37:02Z",
          "updatedAt": "2025-05-31T16:37:02Z"
        }
      ]
    },
    {
      "number": 3,
      "id": "I_kwDOOooYGs65HRnk",
      "title": "Generalize Pattern with SPIFFE as an example",
      "url": "https://github.com/PieterKas/OAuth-and-SPIFFE-Registration/issues/3",
      "state": "OPEN",
      "author": "PieterKas",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "Based on conversations with @dagdagdag83 - this may be better to write as a \"general framework\" and then use SPIFFE as an instance of that pattern.",
      "createdAt": "2025-05-31T16:04:38Z",
      "updatedAt": "2025-05-31T16:04:38Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 4,
      "id": "I_kwDOOooYGs65cC9C",
      "title": "Section 3 needs examples",
      "url": "https://github.com/PieterKas/OAuth-and-SPIFFE-Registration/issues/4",
      "state": "OPEN",
      "author": "deansaxe",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "I recommend adding some examples for section 3. Specifically, an appendix to address the registration of OAuth metadata (last sentence, 3rd paragraph) which shows specific examples of how metadata may be registered.",
      "createdAt": "2025-06-02T18:09:35Z",
      "updatedAt": "2025-06-02T18:09:35Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 5,
      "id": "I_kwDOOooYGs65cD3D",
      "title": "Figure 1 Step A",
      "url": "https://github.com/PieterKas/OAuth-and-SPIFFE-Registration/issues/5",
      "state": "OPEN",
      "author": "deansaxe",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "Can this step by dynamic or must the SPIFFE issuer be pre-configured for the server?  In other words, can the SPIFFE issuer be dynamically configured as an option?",
      "createdAt": "2025-06-02T18:10:38Z",
      "updatedAt": "2025-06-13T11:17:18Z",
      "closedAt": null,
      "comments": [
        {
          "author": "PieterKas",
          "authorAssociation": "OWNER",
          "body": "I think dynamic registration in itself may be a separate specification. Initially I expect this to be a manual step, or if it is automated, it is deployment specific - it is the equivalent of making a trust decision.",
          "createdAt": "2025-06-13T11:17:17Z",
          "updatedAt": "2025-06-13T11:17:17Z"
        }
      ]
    },
    {
      "number": 6,
      "id": "I_kwDOOooYGs65cFcP",
      "title": "FIgure 1 Step B",
      "url": "https://github.com/PieterKas/OAuth-and-SPIFFE-Registration/issues/6",
      "state": "CLOSED",
      "author": "deansaxe",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "Step B indicates that the x.509-SVID and SVID-JWT are both required to be registered.  Can this be an OR or an AND/OR?  I'm unclear whether both credential types must be supported or whether the AS can choose to support one credential type or both.\n\n",
      "createdAt": "2025-06-02T18:12:26Z",
      "updatedAt": "2025-06-13T13:17:21Z",
      "closedAt": "2025-06-13T13:17:21Z",
      "comments": [
        {
          "author": "PieterKas",
          "authorAssociation": "OWNER",
          "body": "It should be one or the other that is used for authentication, but typically both can be provisioned (and often is). That is more a SPIFFE deployment thing. In the future this will include a WIT-SVID.",
          "createdAt": "2025-06-13T11:18:05Z",
          "updatedAt": "2025-06-13T11:19:52Z"
        }
      ]
    },
    {
      "number": 7,
      "id": "I_kwDOOooYGs65cHwm",
      "title": "Figure 2 issues",
      "url": "https://github.com/PieterKas/OAuth-and-SPIFFE-Registration/issues/7",
      "state": "CLOSED",
      "author": "deansaxe",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "Step E and F between the client and AS should be relabeled F and G.\n\nStep E seems to have the arrow pointed in the wrong direction.",
      "createdAt": "2025-06-02T18:15:19Z",
      "updatedAt": "2025-06-13T13:17:08Z",
      "closedAt": "2025-06-13T13:17:08Z",
      "comments": []
    },
    {
      "number": 8,
      "id": "I_kwDOOooYGs65cJBI",
      "title": "Section 4.1 SHOULD --> MUST?",
      "url": "https://github.com/PieterKas/OAuth-and-SPIFFE-Registration/issues/8",
      "state": "CLOSED",
      "author": "deansaxe",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "Section 4.1 says the client SHOULD authenticate.  Should this SHOULD be changed to a MUST to require authN of the client with an SVID-JWT or x.509-SVID?",
      "createdAt": "2025-06-02T18:16:48Z",
      "updatedAt": "2025-06-17T11:48:59Z",
      "closedAt": "2025-06-17T11:48:59Z",
      "comments": [
        {
          "author": "PieterKas",
          "authorAssociation": "OWNER",
          "body": "Agreed - adressed in #14 ",
          "createdAt": "2025-06-17T11:48:50Z",
          "updatedAt": "2025-06-17T11:48:50Z"
        }
      ]
    },
    {
      "number": 12,
      "id": "I_kwDOOooYGs67Xupc",
      "title": "Add Dag Sneeggen as contributer",
      "url": "https://github.com/PieterKas/OAuth-and-SPIFFE-Registration/issues/12",
      "state": "CLOSED",
      "author": "PieterKas",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-06-13T13:19:08Z",
      "updatedAt": "2025-06-18T15:15:16Z",
      "closedAt": "2025-06-18T15:15:16Z",
      "comments": []
    },
    {
      "number": 15,
      "id": "I_kwDOOooYGs678ml6",
      "title": "Add Acknowledgments",
      "url": "https://github.com/PieterKas/OAuth-and-SPIFFE-Registration/issues/15",
      "state": "CLOSED",
      "author": "PieterKas",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "Acknowledge Dmitry Telegin (Backbase), Dan Sneeggen (Signicat) and Dean Saxe (Beyond Identity), Arndt Schwenkshuster (SPIRL), Marcel Levy (SPIRL) for the discussions feedback and contributions to this draft.",
      "createdAt": "2025-06-17T11:55:36Z",
      "updatedAt": "2025-06-18T10:44:43Z",
      "closedAt": "2025-06-18T10:44:43Z",
      "comments": []
    },
    {
      "number": 17,
      "id": "I_kwDOOooYGs68Isi7",
      "title": "Update Client Lifecycle management",
      "url": "https://github.com/PieterKas/OAuth-and-SPIFFE-Registration/issues/17",
      "state": "CLOSED",
      "author": "PieterKas",
      "authorAssociation": "OWNER",
      "assignees": [
        "dagdagdag83"
      ],
      "labels": [],
      "body": "Add concepts of post-registration lifecycle management to the lifecycel management section:\n\n1. Configuration\n2. Entitlement\n3. Updates\n4. Unregister",
      "createdAt": "2025-06-18T10:51:08Z",
      "updatedAt": "2025-06-19T19:03:37Z",
      "closedAt": "2025-06-19T19:03:37Z",
      "comments": []
    },
    {
      "number": 18,
      "id": "I_kwDOOooYGs68Iwth",
      "title": "Add Error Codes",
      "url": "https://github.com/PieterKas/OAuth-and-SPIFFE-Registration/issues/18",
      "state": "CLOSED",
      "author": "PieterKas",
      "authorAssociation": "OWNER",
      "assignees": [
        "dagdagdag83"
      ],
      "labels": [],
      "body": "Add a section on error codes:\n\ne.g. 403\n\n1. Registration failed, \n2. Registration complete but additional config needed.\n\nAlso 401 - authentication failed.",
      "createdAt": "2025-06-18T10:56:58Z",
      "updatedAt": "2025-06-19T19:05:46Z",
      "closedAt": "2025-06-19T19:05:46Z",
      "comments": []
    },
    {
      "number": 20,
      "id": "I_kwDOOooYGs68ayru",
      "title": "Add Dag Sneeggen as a co-author",
      "url": "https://github.com/PieterKas/OAuth-and-SPIFFE-Registration/issues/20",
      "state": "OPEN",
      "author": "PieterKas",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-06-19T19:05:35Z",
      "updatedAt": "2025-06-19T19:05:35Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 21,
      "id": "I_kwDOOooYGs68ay-o",
      "title": "Refine Error Descriptions",
      "url": "https://github.com/PieterKas/OAuth-and-SPIFFE-Registration/issues/21",
      "state": "OPEN",
      "author": "PieterKas",
      "authorAssociation": "OWNER",
      "assignees": [
        "dagdagdag83"
      ],
      "labels": [],
      "body": "",
      "createdAt": "2025-06-19T19:06:23Z",
      "updatedAt": "2025-06-19T19:06:23Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 22,
      "id": "I_kwDOOooYGs68azJP",
      "title": "Add Security Considerations on Lifecycle Management",
      "url": "https://github.com/PieterKas/OAuth-and-SPIFFE-Registration/issues/22",
      "state": "OPEN",
      "author": "PieterKas",
      "authorAssociation": "OWNER",
      "assignees": [
        "dagdagdag83"
      ],
      "labels": [],
      "body": "",
      "createdAt": "2025-06-19T19:06:51Z",
      "updatedAt": "2025-06-19T19:06:51Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 23,
      "id": "I_kwDOOooYGs68bpdn",
      "title": "Cleanup duplication between sections Additional metadata & lifecycle mgmt",
      "url": "https://github.com/PieterKas/OAuth-and-SPIFFE-Registration/issues/23",
      "state": "OPEN",
      "author": "dagdagdag83",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-06-19T21:28:35Z",
      "updatedAt": "2025-06-19T21:28:35Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 24,
      "id": "I_kwDOOooYGs7CMuyS",
      "title": "Typos",
      "url": "https://github.com/PieterKas/OAuth-and-SPIFFE-Registration/issues/24",
      "state": "OPEN",
      "author": "dteleguin",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "https://github.com/PieterKas/OAuth-and-SPIFFE-Registration/blob/89b866b74b854d170396c0099a3bc16d8a8d2183/draft-kasselman-oauth-spiffe.md?plain=1#L83\n\n> allow**s** for on-demand scaling \u2192 allow \n\nhttps://github.com/PieterKas/OAuth-and-SPIFFE-Registration/blob/89b866b74b854d170396c0099a3bc16d8a8d2183/draft-kasselman-oauth-spiffe.md?plain=1#L85\n\n> Secure Production Identity Production Framework \u2192 Secure Production Identity Framework For Everyone\n> Cloud Native Compute Foundation \u2192 Cloud Native Comput**ing** Foundation\n> It is designed to dynamically attest and verify **a** workloads \u2192 (remove \"a\")\n> known as JWT-SVID and X.509-SVIDs \u2192 known as JWT-SVID**s** and X.509-SVIDs\n\nhttps://github.com/PieterKas/OAuth-and-SPIFFE-Registration/blob/89b866b74b854d170396c0099a3bc16d8a8d2183/draft-kasselman-oauth-spiffe.md?plain=1#L98\n\n> SPIFFE supports multiple credential formats, including JWT-SVID {{SPIFFE_JWT}} and **JWT-X.509** {{SPIFFE_X509}}. \u2192 X.509-SVID\n\nhttps://github.com/PieterKas/OAuth-and-SPIFFE-Registration/blob/89b866b74b854d170396c0099a3bc16d8a8d2183/draft-kasselman-oauth-spiffe.md?plain=1#L102\n\n> no **addditional** client secret is needed \u2192 additional\n> The authorization server may use a number of **mechanissms** for obtaining additional metadata. \u2192 mechanisms\n\nhttps://github.com/PieterKas/OAuth-and-SPIFFE-Registration/blob/89b866b74b854d170396c0099a3bc16d8a8d2183/draft-kasselman-oauth-spiffe.md?plain=1#L140\n\n> The **Oauth** client **use** the access token it retrieved in the previous step and **use** it to **acccess** the resource server. \u2192 The **OAuth** client use**s** the access token it retrieved in the previous step and use**s** it to **access** the resource server.",
      "createdAt": "2025-07-24T01:05:34Z",
      "updatedAt": "2025-07-24T01:09:22Z",
      "closedAt": null,
      "comments": []
    }
  ],
  "pulls": [
    {
      "number": 1,
      "id": "PR_kwDOOooYGs6X3LrX",
      "title": "Fix typos and diagrams",
      "url": "https://github.com/PieterKas/OAuth-and-SPIFFE-Registration/pull/1",
      "state": "MERGED",
      "author": "heymarcel",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "- Language suggestions\r\n- Fixed minor typos\r\n- Cleaned up diagrams, but still not sure whether logic is right in the authorization code grant diagram",
      "createdAt": "2025-05-27T22:45:33Z",
      "updatedAt": "2025-05-31T16:06:00Z",
      "baseRepository": "PieterKas/OAuth-and-SPIFFE-Registration",
      "baseRefName": "main",
      "baseRefOid": "8134d0cbc4950119a39c93fc3e917e5501ea4157",
      "headRepository": "heymarcel/OAuth-and-SPIFFE-Registration",
      "headRefName": "main",
      "headRefOid": "8bc54ff121743a0e15b33b65abf7a6791cd62737",
      "closedAt": "2025-05-31T16:06:00Z",
      "mergedAt": "2025-05-31T16:06:00Z",
      "mergedBy": "PieterKas",
      "mergeCommit": {
        "oid": "3557fe6a4603179f38e413e51c1facb07cb369ba"
      },
      "comments": [
        {
          "author": "dagdagdag83",
          "authorAssociation": "COLLABORATOR",
          "body": "This is a carry-over from @PieterKas, but this PR would be a good chance to fix this too I will mention it:\r\nIn my opinion we should not use the terminology `client_id` and `client_id`, we should use \"client ID\" and \"client secret\" (capitalized only when referred to specifically The Client ID or The Client Secret).\r\n\r\nThe terms `client_id` and `client_secret` should only be used when we are referring specifically to the parameters, which are snake_cased and usually in code formatting.",
          "createdAt": "2025-05-28T09:42:19Z",
          "updatedAt": "2025-05-28T11:55:27Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 9,
      "id": "PR_kwDOOooYGs6aXTi3",
      "title": "Fixed terminology related to client id and secret",
      "url": "https://github.com/PieterKas/OAuth-and-SPIFFE-Registration/pull/9",
      "state": "MERGED",
      "author": "dagdagdag83",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "dagdagdag83"
      ],
      "labels": [],
      "body": "* Unified terminology for client ID and client secret.\r\n* Tried to also clarify the difference between client ID (as in the identifier of a client) and \"the client\" (as in the rather abstract notion of an OAuth client)\r\n\r\nResolves #2 ",
      "createdAt": "2025-06-13T10:11:22Z",
      "updatedAt": "2025-06-13T13:15:58Z",
      "baseRepository": "PieterKas/OAuth-and-SPIFFE-Registration",
      "baseRefName": "main",
      "baseRefOid": "5099f91c04647c51da3074aff3131946daae2a69",
      "headRepository": "dagdagdag83/OAuth-and-SPIFFE-Registration",
      "headRefName": "Clarify-terminology",
      "headRefOid": "927f3d657e20f5cb6ebf929542c8c69cfee35ca7",
      "closedAt": "2025-06-13T13:15:58Z",
      "mergedAt": "2025-06-13T13:15:58Z",
      "mergedBy": "PieterKas",
      "mergeCommit": {
        "oid": "65cb78b212215ce0730358043f3b513369b90b49"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOOooYGs6uTgyN",
          "commit": {
            "abbreviatedOid": "c040193"
          },
          "author": "PieterKas",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-06-13T11:03:47Z",
          "updatedAt": "2025-06-13T11:03:48Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Instead of client ID, use client identifier (consistent with other drafts).",
              "createdAt": "2025-06-13T11:03:47Z",
              "updatedAt": "2025-06-13T11:03:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOOooYGs6uTkrC",
          "commit": {
            "abbreviatedOid": "c040193"
          },
          "author": "PieterKas",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-06-13T11:06:59Z",
          "updatedAt": "2025-06-13T11:06:59Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "Suggest change to:\r\n\r\nThe OAuth authorization server avoids operational overheads of registering the client and client secrets by accepting SPIFFE credentials from a workload acting as an OAuth client.",
              "createdAt": "2025-06-13T11:06:59Z",
              "updatedAt": "2025-06-13T11:07:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOOooYGs6uTpca",
          "commit": {
            "abbreviatedOid": "c040193"
          },
          "author": "PieterKas",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-06-13T11:10:20Z",
          "updatedAt": "2025-06-13T11:10:20Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "Change to:\r\n\r\n\"Register on first use\" varies depending whether or not the OAuth flows includes redirection. \r\n\r\nRemove \"fundamental\" from below sentence\r\n\r\nThese fundamental differences require distinct implementation considerations when implementing client registration on first use.",
              "createdAt": "2025-06-13T11:10:20Z",
              "updatedAt": "2025-06-13T11:10:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOOooYGs6uTq-n",
          "commit": {
            "abbreviatedOid": "c040193"
          },
          "author": "PieterKas",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-06-13T11:11:31Z",
          "updatedAt": "2025-06-13T11:11:32Z",
          "comments": [
            {
              "originalPosition": 42,
              "body": "write out identifier (consitent with other RFCs)",
              "createdAt": "2025-06-13T11:11:31Z",
              "updatedAt": "2025-06-13T11:11:32Z"
            }
          ]
        }
      ]
    },
    {
      "number": 10,
      "id": "PR_kwDOOooYGs6aYAOZ",
      "title": "Clarify example of which spiffe credentials can be used.",
      "url": "https://github.com/PieterKas/OAuth-and-SPIFFE-Registration/pull/10",
      "state": "MERGED",
      "author": "PieterKas",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "See #6",
      "createdAt": "2025-06-13T11:21:41Z",
      "updatedAt": "2025-06-13T13:16:22Z",
      "baseRepository": "PieterKas/OAuth-and-SPIFFE-Registration",
      "baseRefName": "main",
      "baseRefOid": "5099f91c04647c51da3074aff3131946daae2a69",
      "headRepository": "PieterKas/OAuth-and-SPIFFE-Registration",
      "headRefName": "PieterKas-patch-1",
      "headRefOid": "349a69b5320927b36c70e6be26b5edd7e6adc0e1",
      "closedAt": "2025-06-13T13:16:22Z",
      "mergedAt": "2025-06-13T13:16:22Z",
      "mergedBy": "PieterKas",
      "mergeCommit": {
        "oid": "6bdae8474c14d85db05289ea5da842e8b5a291ff"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 11,
      "id": "PR_kwDOOooYGs6aYYkw",
      "title": "Correction to Figure 2",
      "url": "https://github.com/PieterKas/OAuth-and-SPIFFE-Registration/pull/11",
      "state": "MERGED",
      "author": "PieterKas",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "See #7",
      "createdAt": "2025-06-13T12:05:51Z",
      "updatedAt": "2025-06-13T13:16:35Z",
      "baseRepository": "PieterKas/OAuth-and-SPIFFE-Registration",
      "baseRefName": "main",
      "baseRefOid": "5099f91c04647c51da3074aff3131946daae2a69",
      "headRepository": "PieterKas/OAuth-and-SPIFFE-Registration",
      "headRefName": "PieterKas-patch-2",
      "headRefOid": "014019548451ef7898ec947b602b2a48f6e776ec",
      "closedAt": "2025-06-13T13:16:35Z",
      "mergedAt": "2025-06-13T13:16:35Z",
      "mergedBy": "PieterKas",
      "mergeCommit": {
        "oid": "90a88cd046047adcc038a289bd84e90c8a9d628b"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 13,
      "id": "PR_kwDOOooYGs6a4bVF",
      "title": "Added Dag as contributor",
      "url": "https://github.com/PieterKas/OAuth-and-SPIFFE-Registration/pull/13",
      "state": "MERGED",
      "author": "PieterKas",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "see #12 ",
      "createdAt": "2025-06-17T11:17:46Z",
      "updatedAt": "2025-06-17T11:48:11Z",
      "baseRepository": "PieterKas/OAuth-and-SPIFFE-Registration",
      "baseRefName": "main",
      "baseRefOid": "90a88cd046047adcc038a289bd84e90c8a9d628b",
      "headRepository": "PieterKas/OAuth-and-SPIFFE-Registration",
      "headRefName": "PieterKas-patch-3",
      "headRefOid": "bbf5193ead71701362666d569076c1c407b1efc6",
      "closedAt": "2025-06-17T11:48:10Z",
      "mergedAt": "2025-06-17T11:48:10Z",
      "mergedBy": "PieterKas",
      "mergeCommit": {
        "oid": "fb1caf7d9c9ea65fce77595f02273062ea959e7a"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 14,
      "id": "PR_kwDOOooYGs6a4uCd",
      "title": "Section 4.1 SHOULD -> MUST",
      "url": "https://github.com/PieterKas/OAuth-and-SPIFFE-Registration/pull/14",
      "state": "MERGED",
      "author": "PieterKas",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "As pointed out in #8",
      "createdAt": "2025-06-17T11:47:28Z",
      "updatedAt": "2025-06-17T11:47:54Z",
      "baseRepository": "PieterKas/OAuth-and-SPIFFE-Registration",
      "baseRefName": "main",
      "baseRefOid": "90a88cd046047adcc038a289bd84e90c8a9d628b",
      "headRepository": "PieterKas/OAuth-and-SPIFFE-Registration",
      "headRefName": "PieterKas-patch-4",
      "headRefOid": "89da6a8c710baf7458d8170c13a07b7d96d88190",
      "closedAt": "2025-06-17T11:47:54Z",
      "mergedAt": "2025-06-17T11:47:54Z",
      "mergedBy": "PieterKas",
      "mergeCommit": {
        "oid": "dae8f7dbd9bcb3cb1e9199f3d53847ab14c8f7ce"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 16,
      "id": "PR_kwDOOooYGs6a44Nj",
      "title": "Added acknowledgments, document history",
      "url": "https://github.com/PieterKas/OAuth-and-SPIFFE-Registration/pull/16",
      "state": "MERGED",
      "author": "PieterKas",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "See #15 ",
      "createdAt": "2025-06-17T12:02:23Z",
      "updatedAt": "2025-06-17T12:03:00Z",
      "baseRepository": "PieterKas/OAuth-and-SPIFFE-Registration",
      "baseRefName": "main",
      "baseRefOid": "032606f635290807adec6630a1279d1e5a966532",
      "headRepository": "PieterKas/OAuth-and-SPIFFE-Registration",
      "headRefName": "PieterKas-patch-5",
      "headRefOid": "f5b5d88db29fd04d493ce2b5c11983f0a66521f0",
      "closedAt": "2025-06-17T12:03:00Z",
      "mergedAt": "2025-06-17T12:03:00Z",
      "mergedBy": "PieterKas",
      "mergeCommit": {
        "oid": "0515575b7aad9ad939f1102a4bf38f66b13e6e43"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 19,
      "id": "PR_kwDOOooYGs6bIzIN",
      "title": "Expand client lifecycle management & add error response",
      "url": "https://github.com/PieterKas/OAuth-and-SPIFFE-Registration/pull/19",
      "state": "MERGED",
      "author": "dagdagdag83",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "dagdagdag83"
      ],
      "labels": [],
      "body": "* Greatly expands section 6, changes title to \"Post-Registration Client Lifecycle Management\".\r\n* Introduces more granular client lifecycle stages.\r\n* Adds section \"Client Registration Error Response\".\r\n\r\nResolves #17 & #18 ",
      "createdAt": "2025-06-18T20:03:24Z",
      "updatedAt": "2025-06-19T19:03:36Z",
      "baseRepository": "PieterKas/OAuth-and-SPIFFE-Registration",
      "baseRefName": "main",
      "baseRefOid": "a6a7fc89d9ac6ddcc5a6caad44640d464ea996b9",
      "headRepository": "dagdagdag83/OAuth-and-SPIFFE-Registration",
      "headRefName": "expand-client-lifecycle-management",
      "headRefOid": "5569a156fb0123daf510a157d026198dcdb0ae44",
      "closedAt": "2025-06-19T19:03:36Z",
      "mergedAt": "2025-06-19T19:03:36Z",
      "mergedBy": "PieterKas",
      "mergeCommit": {
        "oid": "c7593b0175b227dcd1c5b05840d64495c8aec6d8"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOOooYGs6vcwbb",
          "commit": {
            "abbreviatedOid": "b3edb67"
          },
          "author": "PieterKas",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-06-19T16:03:34Z",
          "updatedAt": "2025-06-19T16:03:35Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": ">Care must be taken to return enough useful information, but not so much as to potentially aid malicious actors.\r\n\r\nI would suggest removing this and instead be explicit about error codes instead or error conditions that are returned (expired, signature not verified, etc). Leaving it vague like this will cause  interop issues. It may be appropriate to add a \"security considerations\" section and discuss it more there. In the near term this can be left as a TODO.",
              "createdAt": "2025-06-19T16:03:34Z",
              "updatedAt": "2025-06-19T16:03:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOOooYGs6vcx3j",
          "commit": {
            "abbreviatedOid": "b3edb67"
          },
          "author": "PieterKas",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-06-19T16:06:01Z",
          "updatedAt": "2025-06-19T16:06:01Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "> The error response should indicate what was invalid or disallowed, and ideally how it can be resolved.\r\n\r\nThis is a good principle, but does not help interoperability - - perhaps have a TODO and we can decide later?\r\n\r\n",
              "createdAt": "2025-06-19T16:06:01Z",
              "updatedAt": "2025-06-19T16:06:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOOooYGs6vczVx",
          "commit": {
            "abbreviatedOid": "b3edb67"
          },
          "author": "PieterKas",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-06-19T16:09:14Z",
          "updatedAt": "2025-06-19T16:09:15Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "As a general thought on the error response section, perhaps take a look at RFC 6749  - one idea would b to keep error responses and how they are documented consistent with that draft. https://datatracker.ietf.org/doc/html/rfc6749#page-45\r\n\r\nFor now, we can leave the details as a TODO. We can then add an issue to flesh out the details.",
              "createdAt": "2025-06-19T16:09:15Z",
              "updatedAt": "2025-06-19T16:09:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOOooYGs6vczmQ",
          "commit": {
            "abbreviatedOid": "b3edb67"
          },
          "author": "PieterKas",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-06-19T16:09:47Z",
          "updatedAt": "2025-06-19T16:09:47Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "Similar thoughts as previous two sections",
              "createdAt": "2025-06-19T16:09:47Z",
              "updatedAt": "2025-06-19T16:09:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOOooYGs6vc0T0",
          "commit": {
            "abbreviatedOid": "b3edb67"
          },
          "author": "PieterKas",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-06-19T16:11:07Z",
          "updatedAt": "2025-06-19T16:11:08Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "additional work -> additional steps MAY be required\r\n\r\nor entitlement -> or entitlement information.",
              "createdAt": "2025-06-19T16:11:07Z",
              "updatedAt": "2025-06-19T16:11:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOOooYGs6vc5NP",
          "commit": {
            "abbreviatedOid": "b3edb67"
          },
          "author": "PieterKas",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-06-19T16:21:46Z",
          "updatedAt": "2025-06-19T16:21:47Z",
          "comments": [
            {
              "originalPosition": 29,
              "body": "A client MUST be configured with the necessary operational metadata to function correctly and securely. An authorization server may use a number of mechanisms for obtaining metadata. Metadata may be statically preconfigured, automatically or manually created, or retrieved from a configuration management system. This can happen instantaneously after registration or it can be asynchronous. If metadata is added asynchronously, the authorization server MUST return an \"Incomplete Registration\" error whenever the client interacts with the authorization server, until the additional metadata has been added.",
              "createdAt": "2025-06-19T16:21:46Z",
              "updatedAt": "2025-06-19T16:21:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOOooYGs6vc7IK",
          "commit": {
            "abbreviatedOid": "b3edb67"
          },
          "author": "PieterKas",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-06-19T16:24:22Z",
          "updatedAt": "2025-06-19T16:24:22Z",
          "comments": [
            {
              "originalPosition": 37,
              "body": "Perhaps seperate out the discussion on doing updates, and discuss the security considerations in the Security Considerations section under \"Entitlement Updates\" as the heading.",
              "createdAt": "2025-06-19T16:24:22Z",
              "updatedAt": "2025-06-19T16:24:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOOooYGs6vc-cf",
          "commit": {
            "abbreviatedOid": "b3edb67"
          },
          "author": "PieterKas",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-06-19T16:29:37Z",
          "updatedAt": "2025-06-19T16:29:37Z",
          "comments": [
            {
              "originalPosition": 40,
              "body": "Unregister may be a better word choice (not sure, just feels like human unregistered, so readers might understand that better)\r\n\r\nAlso spell out TTL (time to live). or remove it. perhaps something like:\r\n\r\n An authorization server MAY automatically expire clients. This avoids a large number of unused clients identifiers from accumulating. If a client identifier is deleted, it can re-register using the \"register-on-first-use\" pattern described in this document.",
              "createdAt": "2025-06-19T16:29:37Z",
              "updatedAt": "2025-06-19T16:29:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOOooYGs6vdtRr",
          "commit": {
            "abbreviatedOid": "b3edb67"
          },
          "author": "dagdagdag83",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-06-19T18:33:33Z",
          "updatedAt": "2025-06-19T18:33:33Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "I agree, the error section is generally not at the level it should be. RFC 6749 is a good example. I added a TODO.",
              "createdAt": "2025-06-19T18:33:33Z",
              "updatedAt": "2025-06-19T18:33:34Z"
            }
          ]
        }
      ]
    }
  ]
}